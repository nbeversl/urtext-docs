Collections

Collections are for "collecting" metadata entries, along with their context, in order to gain a range of views into the text content of a project. A common use for this would be to create a timeline from datetimestamps. Another use would be to collect all metadata entries of a given key, and optionally a given value, into a single view. 

[[   ID(>aoq)
     +(*) <- In order to return anything, we must include some nodes in the query. Here we have included all nodes.
     COLLECT(id=*)
     HEADER(Example Collection)
     ]]

{ Example Collection
id :: 001 >001:40 
 Example Child Node Using a Node Pointer


id :: 002 >002:186 
 Since you can navigate entirely from within files, Urtext works great in Sublime's Distraction Free Mode. View -> Enter Distraction Free Mode


id :: 003 >003:137 
 Here are some tips for best leveraging Sublime's great UI features.


id :: 004 >004:1287 
 For all purposes in Urtext, inline nodes' identity is unique from their containing file, parent nodes, and child nodes.


id :: 005 >005:319 
 Urtext also utilizes a "loose" parsing of inline timestamps, meaning they can be placed anywhere and will be recognized and parsed.


id :: 006 >006:2333 
 - Version control (Git, for example).


id :: 00c >00c:146 
 The Home page is accessible anywhere in the project by pressing Ctrl-Shift-H. Specify the node ID you want this shortcut to jump to.


id :: 00e >00e:22 
 Example Inline Node


id :: 00i >00i:19 
 Filename formats


id :: 00j >00j:87 
 | Pointers >lmu


id :: 00k >00k:361 
 Collections are for "collecting" metadata entries, along with their context, in order to gain a range of views into the text content of a project. A common use for this would be to create a timeline from datetimestamps. Another use would be to collect all metadata entries of a given key, and optionally a given value, into a single view.


id :: 00l >00l:376 
 This node now has special reserved metadata keys that will be parsed as follows:


id :: 00m >00m:653 
 Links TO the current node FROM another node. When you select this command, a link to the current node will be copied to the clipboard. You can then paste the reference into the node you open in the quick panel.


id :: 00n >00n:284 
 Changing the default node_date_timestamp name and bevahior


id :: 00o >00o:222 
 Example: pressing Ctrl/Command-Shift-/ on this line below will open the link: http://github.com


id :: 00p >00p:170 
 Example:   f>./README.md


id :: 00q >00q:136 
 Linking to outside resources


id :: 00t >00t:286 
 Here is the same example child node from above: | Example Child Node Using a Node Pointer >001


id :: 00u >00u:1004 
 These diagrams are displayed as Sublime "scratch" views, meaning they will never report as being dirty (unsaved). They are intended for one-time/temporary use and will not update when a node/file changes. To make permanent and dynamically updated diagrams, see | Dynamic Nodes >e82.


id :: 00v >00v:66 
 Example Source Node 2


id :: 00w >00w:17 
 This feature is currently implemented in Sublime Text only.


id :: 00x >00x:25 
 Metadata


id :: 00z >00z:489 
 Unindexed nodes will display underneath indexed nodes, by timestamp, newest firs


id :: 013 >013:118 
 About Urtext


id :: 014 >014:110 
 Import/Export to/from: Markdown, HTML, pure plain text, JSON


id :: 015 >015:190 
 This preference can also be set on a per-(Sublime)-project basis. See the Sublime documentation


id :: 017 >017:33 
 Example Source Node 1


id :: 018 >018:666 
 ctrl+shift+-            Align selected lines to the right (120 character width)


id :: 01b >01b:35 
 Example Source Node 3


id :: 01c >01c:35 
 Example Source Node 4


id :: 01d >01d:683 
 Then change to the Urtext syntax by selecting it in View -> Syntax -> Urtext. To avoid having to do this for every file, select View -> Syntax -> Open All with Current Extension As ... -> Urtext. (You can undo this later by repeating the same but selecting Plain Text.


id :: 01e >01e:337 
 See | Embedded Syntaxes and Pass Markers >oy5


id :: 01i >01i:626 
 In the Node List, nodes are sorted by their time of creation, with most recent first. They can also be sorted by index (see | `index` >00z).


id :: 01j >01j:912 
 ss


id :: 01m >01m:915 
 This system preserves automatic numerical sorting within the filesystem, such that the most recent un-indexed nodes appear first. If you want to use another system, such as putting the title first, you can do so.


id :: 01n >01n:5061 
 └── Example Recursive Node Tree >01n


id :: 01q >01q:379 
 <- This is not just an example; it specifies the ID of this node.


id :: 01r >01r:724 
 Here is the compiled node defined by the definition above. Changing the dynamic definition and/or the contents or metadata of the source nodes will update the dynamic node. Saving is necessary to trigger the update.


id :: 01u >01u:958 
 Some features in this documentation are built into the Urtext interpreter/compiler, while others are part of only the Sublime Text implementation. Features that are specific to Sublime are tagged with the keyword `sublime`.


id :: 01w >01w:177 
 Note that Urtext reads node regions on every save, so cursor location may be imprecise if the file has been altered since the last save.


id :: 01x >01x:614 
 >00l


id :: 01y >01y:1567 
 Syncing manually comes with the drawback that changes made on the iOS device will not themselves sync to Dropbox in the background. For instance, if changes are made to a file on iOS while not connected to the internet and Pythonista, the project will have to be explictly synced at a later time. So there remains the possibility that projects will get out of sync.


id :: 01z >01z:50 
 DOCUMENTATION COMING


id :: 023 >023:346 
 Urtext does a lot of writing to files on the fly, often when they are already open. To avoid seeing a dialog every time, add add the following to your Sublime project settings or User Preferences file:


id :: 029 >029:312 
 For more information on trees, see |  ?  >00h


id :: 04s >04s:163 
 Control-Shift-I will insert a new and unused node anywhere in the project, in case you delete one or want to insert one manually


id :: 0y2 >0y2:255 
 To make a "hyperlink" from one node to another, use the right angle bracket (>) followed immediately by a node ID. Linking does not require a filename or any other information, only the node ID. Any other surrounding text is ignored.


id :: 1rc >1rc:257 
 Formatting plaintext using tab indentions can look messy if indent guides are on. To turn them off, add to your Sublime project settings file:


id :: 2a3 >2a3:69 
 Trailing Node IDs


id :: 2fn >2fn:860 
 Close and reopen Sublime Text. Urtext is now ready to use.


id :: 3n6 >3n6:189 
 | Traverse Mode >00w


id :: 3x3 >3x3:70 
 


id :: 3xv >3xv:37 
 Traverse Mode


id :: 4p9 >4p9:271 
 Fuzzy and Full Text Search are already implemented in many modern desktop text editors and some mobile text editors. However Urtext has a built-in search and index capability to avoid reliance on editors and environments.


id :: 4vu >4vu:314 
 Titled links are updated at the single file level whenever that file is saved.


id :: 5cq >5cq:18 
 `def`


id :: 5pq >5pq:61 
 test fourth level


id :: 6cd >6cd:1444 
 ss


id :: 6ct >6ct:1050 
 See | Dynamic Definitions >87g for more information on how to generate trees like this in dynamic nodes.


id :: 6qj >6qj:50 
 test test second level


id :: 774 >774:1227 
 https://pypi.org/project/diff-match-patch/


id :: 7lx >7lx:341 
 Following this link will change the project context to the named project and open its specified node.


id :: 7w6 >7w6:266 
 Time zones are not required. If no time zone is present, Coordinated Universal Time (UTC) is added by default  for parsing and comparison purposes. To modify this default, set the `timezone` key in | project_settings >00l to another valid value


id :: 80d >80d:48 
 third level


id :: 87g >87g:942 
 The dynamic definition below does not actually do anything. It rather lists every parameter along with an explanation of its use and purpose. For example uses, see | Dynamic Nodes >k8p


id :: 8dw >8dw:1181 
 Note that a timestamp anywhere in the value will be indexed as the timestamp for the whole metadata entry. If more than on timestamp appears in an entry, only the first one is indexe


id :: 8e5 >8e5:399 
 The symbol below is a Pass Marker, which tells Urtext to skip everything between it and the closing "END" marker. Use for embedding other syntaxes or to otherwise ignore syntax entirely. Here it enables us to document the Urtext syntax without actually using it correctly within this node. More information: | Embedded Syntaxes and Pass Markers >oy


id :: 8fv >8fv:222 
 See | "Table of Contents" Dynamic Definition >v7r for information)


id :: 8p5 >8p5:62 
 Templating the Output with the SHOW parameter


id :: 9u0 >9u0:197 
 Move File to Other Project


id :: 9up >9up:47 
 Example inline node within the compact node.


id :: a5m >a5m:684 
 - Control-Shift-h at any time to return to this "home" node.


id :: ac5 >ac5:330 
 | User Interface Elements >3


id :: arl >arl:610 
 Put the contents of the cloned/unzipped folder (important: not the folder itself) directly into your `Sublime Text 3/Lib/python3.3` folder.


id :: baq >baq:181 
 defined


id :: bpk >bpk:22 
 Errors and Warnings


id :: bzv >bzv:497 
 To correct the problem, it is necessary to manually change the duplicate ID to a new one. To ensure the corrected node ID is unique, it is recommended to use control-shift-I for this (as described above), after the rest of the project is compiled.


id :: c1x >c1x:179 
 -


id :: c3n >c3n:376 
 You don't need to define a Sublime Project for the Urtext Project, but if you intend to do more than one thing at a time in Sublime, it's convenient to have one; you can then use Select Project -> Quick Switch Project (Ctrl-Super-P) to switch among them.


id :: d7b >d7b:22 
 Example Compact Node


id :: dce >dce:386 
 - The folder how has one Urtext file and a `history` folder for tracking edits. (See | File History >prp )


id :: e1x >e1x:197 
 modifiying


id :: e5j >e5j:3044 
 └── Word Wrap in Traverse Mode >xci


id :: eea >eea:909 
 Pass the current line contents and cursor position (within the line) to the UrtextProject. The method returns the best link match. Find the filename as described in >h8c and open it at the start_position returned from get_link(). See the open_urtext_node() function in the Sublime Text package for an example.


id :: ekz >ekz:322 
 To create a new file, press `Urtext-;`. A new file is created, named and saved automatically. It has whitespace on top and a metadata block at the bottom containing a node ID and (by default) a creation timestamp.


id :: ezg >ezg:721 
 (source_id): The source node to export.


id :: fo2 >fo2:123 
 There are two reserved keys that Urtext interprets in a special way:


id :: frm >frm:16 
 require an ID


id :: h8z >h8z:720 
 Urtext consolidates content, structure and instructions (scripting) into a single compilable syntax. Although it can link documents or parts of documents together, unlike HTML, there is no additional code or markup "behind" the visible syntax. Everything the interpreter reads is visible to the user at all time


id :: hg7 >hg7:1434 
 Additional formats can be added in the | project_settings >00l node


id :: hiz >hiz:46 
 become child nodes of their containing node.


id :: ia5 >ia5:176 
 Also that the title is the first line of text.


id :: ipy >ipy:1522 
 In Pythonista, use "Switch Projects" from the feature menu.


id :: iy8 >iy8:124 
 Use the `/` key when the cursor is on any line containing a link.


id :: j6t >j6t:313 
 For nodes that can fit on a single line, such as items in a list, short phrases, word definitions, and so on, you can use a simplified node syntax. Begin the line with the caret symbol (^); the closing wrapper then becomes the next newline (the end of the same line). Like other nodes:


id :: jkl >jkl:384 
 This node is just here as a destination from the node pointer in  Syntax Quick-Reference >ttt


id :: k67 >k67:18 
 Search


id :: k8p >k8p:1709 
 | Collections >00k


id :: k8v >k8v:272 
 Sublime : select `Urtext: Search` from the command pallete. This provides an input panel on the lower edge of the screen. Dynamically search results will be shown in a scratch view as you enter search terms. Press ESC to cancel.  Results include links to source nodes.


id :: kpz >kpz:706 
 Like all nodes, a compact node requires an ID. Like all nodes, it can contain metadata and even inline nodes, as long as the entire contents, including wrappers and metadata, are contained on a single line. (Note that "line" in this case refers to consecutive characters between explicit line breaks, and not to lines in the editor, which may be arbitrarily wrapped.)


id :: l36 >l36:404 
 `timestamp_format`


id :: l60 >l60:95 
 Plaintext


id :: lhs >lhs:448 
 - any other writing or information management that can be done in text form


id :: ljr >ljr:86 
 Python


id :: lmu >lmu:911 
 - The tree can be displayed from any arbitrary starting point, whether or not its branches are within or beyond a particular file.


id :: lwg >lwg:19 
 User-Defined


id :: m1r >m1r:634 
 Dynamic Definitions : Syntax and Parameters >87g


id :: m58 >m58:407 
 Reliance on the operating system's "created" or "modified" date metadata is avoided, since these values can be inadvertently overwritten during ordinary file system operations. Instead, new nodes receive by default a "timestamp" metadata key when created:


id :: m9d >m9d:282 
 The following dynamic definition exports this entire documentation (from its root node | Urtext  Version: 0.5-alpha  Usage Guide and References >a5m ) in Markdown format to a file called documentation.md:


id :: nc6 >nc6:20264 
 └── test fifth level >xc9


id :: njo >njo:89 
 JSON


id :: omh >omh:472 
 Show a quick search bar of all nodes in all known projects.


id :: ooe >ooe:295 
 Documentation


id :: os4 >os4:1193 
 - (optional) To enabling launching or switching to Urtext using an app icon, use the Shortcuts app.


id :: osu >osu:224 
 Press Shift-Ctrl-/ on a line containing a link to open the node with the linked ID. If the link is to an inline node, Sublime will scroll to and center its starting point.


id :: oy5 >oy5:228 
 Note that no text content wrapped between pass markers will appear in Urtext dynamic output, since characters in other syntaxes would have unpredictable interactions.


id :: prp >prp:1680 
 Histories are stored in the /history folder inside the project, as .pkl ("pickle") files. This folder requires no user involvement. If using another version control tool such as Git, you may wish to add the /history folder to your .gitignore file, so that only explicitly committed versions of your project are visible in distributed repositories.


id :: pz3 >pz3:119 
 Provides a way to override the node title, which is by default the full first non-whitespace 


id :: q8j >q8j:162 
 Pythonista : Use the "?" Urtext Button. Results will be updated in real time in the view behind the search field. To exit, tap outside the search field.


id :: qjl >qjl:21 
 Note that in order to work, the target node must exist; dynamic definitions do not create their target nodes.


id :: rfp >rfp:122 
 If you accidentally delete a Node ID or need to insert one arbitrarily, press Urtext-i.


id :: ri9 >qjl:169 
 Note that in order to work, the target node must exist; dynamic definitions do not create their target nodes.


id :: rij >rij:579 
 Note the append will occur without a confirmation dialog, so if you are just experimenting with this system, consider making a copy of your file folder so you can revert without having to manually remove the metadata.


id :: rr3 >rr3:25 
 Searching


id :: sqq >sqq:232 
 Urtext recompiles your project every time a file changes. To make this more automatic, addto your Sublime settings file:


id :: tgp >tgp:364 
 Unlike nodes, projects are uniquely identified by name. For this reason, each project must have an unique name within the running instance of Urtext. Projects can be named using the project_title key in the project's project_settings node. If no name is present, the project's name becomes its absolute path in the file system.


id :: thz >thz:254 
 By default, Node lists are "one-dimensional". With the DEPTH parameter, you can expand these to hierarchical nested nodes up to arbitrary depth, whether from | Inline Nodes >004 or from | Pointers >lmu.


id :: ttt >ttt:198 
 Note it has the `exclude_from_tree` flag, which prevents it from showing up in the table of contents.


id :: twz >twz:873 
 Thanks to the `anytree` module (https://pypi.org/project/anytree/) for the plaintext node tree diagrams.


id :: ucj >ucj:199 
 └── About Compact Nodes >ucj


id :: ue2 >ue2:150 
 By default, the full first non-whitespace line of any node is the node's title. This can be overridden using the `title` metadata ke


id :: uh9 >uh9:249 
 LIMIT()


id :: uy4 >uy4:299 
 For example, the following definition targets node >3x3 (below) and populates it with all nodes containing the word "urtext".


id :: v7r >v7r:315 
 | Example : Urtext Documentation Exported in Markdown to a File >m9d


id :: wjj >wjj:283 
 Insert an arbitrary (unallocated) Node ID with metadata wrapper at the cursor position.


id :: x0c >x0c:119 
 Some dynamic instructions do things other than populate or modify contents of nodes.


id :: xba >xba:276 
 Consolidates all metadata tags in the node of the current cursor position, into a single wrapper.


id :: xc9 >xc9:20 
 test fifth leve


id :: xci >xci:506 
 Whenever Traverse Mode is enabled on a view, word wrap for that view is turned off altogether to prevent awkward wrapping of trees. It is restored when Traverse Mode is turned off.


id :: xlc >xlc:35 
 can have arbitrary other metadata


id :: xo9 >xo9:520 
 In Sublime Text, press Ctrl-Shift-P to create a new inline node using this conventio


id :: xor >xor:426 
 Python


id :: xsh >xsh:83 
 HTML


id :: xxx >xxx:4103 
 third level >80d


id :: yin >yin:669 
 Note that metadata tags do not actually get added to the inline text of the the children/descendants as a result of this instruction, only that they acquire the specified key/value metadata pair for all purposes metadata serves within Urtext.


id :: yv2 >yv2:997 
 Urtext has no built-in user interface; it only compiles and manages the files. Using Urtext in a text editor requires an additional wrapper to pass messages between the text editor and Urtext. Currently there is a package for Sublime Text (Mac/Windows/Linux) and a script for Pythonista (iOS).


id :: z7t >z7t:248 
 | Sublime Text Interface Tips >0


id :: znj >znj:1809 
 (Closing pass marker. See above)


def::>00k
ID::aoq }



id::00k; 