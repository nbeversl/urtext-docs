Pointers          

By preceding a link to a node with two right angle brackets instead of one, you can extend trees beyond the file level to create node relationships spanning many files. In addition to being a hyperlink, this connects the targeted node, and all of its subchildren, as descendants of the node containing the Pointer:

    | Example Child Node Using a Node Pointer >>001 

The example Pointer above becomes a child of this node, visible in the | Table of Contents >e5j or using the other tree views described in | Trees >w8u.

The advantages to Node Pointers include:
    - The tree represents a hierachy of actual content, rather than the files containing the content.
    - The tree permits nesting both within and beyond file level.
    - The tree can be displayed from any arbitrary starting point, whether or not its branches are within or beyond a particular file.

{ Duplicate Pointers 
    
    Node Pointers may point more than once to the same node, so that content can be reused or referenced across multiple trees within the same project.
    Here is the same example child node from above: | Example Child Node Using a Node Pointer >>001 
    Note that it appears twice in the Table of Contents, once as a child of this node and once as a child of this node's parent node ( | Pointers >lmu).
    00t}

{  Recursive Node Pointers

    If the tree of a Node Pointer includes one of its own ancestors, the tree will stop at the recursion point incidating "RECURSION" and a link to the node causing the recursion. For example, this Node Pointer points  to the root node of the table of contents: 
        | Urtext  Version: 0.5-alpha  Usage Guide and References >>a5m. 

    You can see the recursion point in the table of contents.

    Note that if you view the entire tree with another node selected as root, one full iteration will still appear, with the point of recursion falling elsewhere. Below is the Table of Contents turned "inside out", with | Pointers >lmu as root. 
       
        [[ ID(>01n) +(id=lmu) DEPTH(*) HEADER(Example Recursive Node Tree)  FORMAT(indent:3)]]
        (See | Trees >w8u for more information on how to generate trees like this in dynamic nodes.)

    {
			Example Recursive Node Tree
			Pointers >lmu
			├── Example Child Node Using a Node Pointer >001
			├── Duplicate Pointers >00t
			│   └── Example Child Node Using a Node Pointer >001
			└── Recursive Node Pointers >6ct
			    ├── Urtext  Version: 0.5-alpha  Usage Guide and References >a5m
			    │   ├── About This Documentation >p23
			    │   ├── Table of Contents >e5j
			    │   ├── Quick Start, Guides and Examples >z7t
			    │   │   ├── Installation and Setup (Desktop) >6cd
			    │   │   ├── Basic Syntax >znj
			    │   │   │   └── The symbol below is a Pass Marker, which tells Urtext to skip everything between it and the closing >8e5
			    │   │   ├── Dynamic Definitions : Syntax and Parameters >87g
			    │   │   ├── Key Bindings and Operations >tx6
			    │   │   │   ├── Navigation >v6a
			    │   │   │   │   ├── Toggle Traverse Mode : ctrl + shift + r >hcf
			    │   │   │   │   ├── Open Urtext Link :	ctrl + shift + / >ngh
			    │   │   │   │   ├── Nav Forward 							ctrl + shift + . >yan
			    │   │   │   │   ├── Nav Backward 							ctrl + shift + , >3hy
			    │   │   │   │   ├── Node Browser, Include All Projects 	ctrl + shift + * >hyh
			    │   │   │   │   ├── Node Browser: Backlinks				ctrl + shift + 1 >1ea
			    │   │   │   │   ├── Node Browser: Forward Links 			ctrl + shift + 2 >ylo
			    │   │   │   │   ├── Home Node 							ctrl + shift + h >5ab
			    │   │   │   │   ├── Node Browser 							ctrl + shift + e >vdr
			    │   │   │   │   ├── Open Random Node 						ctrl + shift + f >q5f
			    │   │   │   │   └── List Projects 						ctrl + shift + o >g5a
			    │   │   │   ├── Content Insertions >35a
			    │   │   │   │   ├── New Node 								ctrl + shift + ; >ve3
			    │   │   │   │   ├── Add Node ID 							ctrl + shift + i >gv9
			    │   │   │   │   ├── Insert Timestamp 						ctrl + shift + t >7b8
			    │   │   │   │   ├── Insert Compact Node 					ctrl + shift + ^ >1qq
			    │   │   │   │   ├── Insert Inline Node   					ctrl + shift + [ >rzx
			    │   │   │   │   ├── Insert Inline Node, minimal (trailing node ID, single line, no other metadata): >9zp
			    │   │   │   │   ├── Insert Dynamic Definition with Node 	ctrl + shift + ] >jsc
			    │   │   │   │   ├── Insert Link to New Node  				ctrl + shift + ' >sxk
			    │   │   │   │   └── Quick Tag from Other 					ctrl + shift + 0 >zep
			    │   │   │   ├── Copy Links >zjz
			    │   │   │   │   ├── Copy Link to this Node  				ctrl + shift + c >vel
			    │   │   │   │   └── Copy Link to this Node With Title  		ctrl + shift + super + c >05x
			    │   │   │   ├── History >e24
			    │   │   │   │   └── Toggle History Traverse					ctrl + shift + g >ndc
			    │   │   │   ├── File Management >n8z
			    │   │   │   │   └── Rename File???							ctrl + shift + s, >5qr
			    │   │   │   └── Menu Operations >9u0
			    │   │   └── Sublime Text Interface Tips >003
			    │   │       ├── Syntax Highlighting >01d
			    │   │       ├── Hiding Tabs >015
			    │   │       ├── Hiding Line Numbers >01e
			    │   │       ├── Full Screen / Distraction Free Mode >002
			    │   │       ├── Disable Prompts for File Reload >023
			    │   │       ├── Remove Indent Guides >1rc
			    │   │       ├── Save on Focus Lost >sqq
			    │   │       └── Using a Sublime Project for an Urtext Project >c3n
			    │   └── Reference >ac5
			    │       ├── Projects >dce
			    │       │   └── Using/Adding Existing Files >rij
			    │       ├── Nodes >01j
			    │       │   ├── File Nodes >ekz
			    │       │   ├── Inline Nodes >004
			    │       │   │   ├── Example Inline Node >00e
			    │       │   │   ├── Example first level >8fv
			    │       │   │   │   └── second level >6qj
			    │       │   │   │       └── third test level >80d
			    │       │   │   │           └── test fourth level >5pq
			    │       │   │   │               └── fifth level >xc9
			    │       │   │   └── Uses for inline nodes >ia5
			    │       │   ├── Compact Nodes >kpz
			    │       │   │   └── Example Compact Node >d7b
			    │       │   │       └── Example inline node within the compact node. >9up
			    │       │   ├── Node Titles >ue2
			    │       │   └── Node IDs >01q
			    │       │       ├── Trailing Node IDs >xo9
			    │       │       ├── Inserting a Node ID manually >04s
			    │       │       ├── Duplicate Node IDs >bzv
			    │       │       └── Generating a node ID manually >rfp
			    │       ├── Metadata >00x
			    │       │   ├── General Syntax >8dw
			    │       │   ├── Timestamps >005
			    │       │   │   ├── Syntax and Format >hg7
			    │       │   │   ├── Tracking Node Dates and Times >m58
			    │       │   │   └── Time Zones >7w6
			    │       │   ├── Case-sensitivity >l36
			    │       │   └── Reserved Keys >fo2
			    │       │       ├── `index` >00z
			    │       │       ├── `title` >pz3
			    │       │       └── `def` >5cq
			    │       ├── Dynamic Nodes >k8p
			    │       │   ├── Lists >twz
			    │       │   │   └── Example: Nodes from the Documentation >m1r
			    │       │   ├── Trees >w8u
			    │       │   │   ├── Expanding a List with the DEPTH Parameter >h6l
			    │       │   │   │   └── Example Tree >4gr
			    │       │   │   └── "Table of Contents" Dynamic Definition >v7r
			    │       │   │       └── Nodes Excluded from the Table of Contents >jkl
			    │       │   └── Collections >00k
			    │       │       └── Example Collection >aoq
			    │       ├── Links and Pointers >00j
			    │       │   ├── Links >0y2
			    │       │   │   └── Sublime Text tools to help with linking >00m
			    │       │   ├── Dynamic Titles >4vu
			    │       │   ├── Opening Links >01w
			    │       │   │   ├── Sublime >osu
			    │       │   │   └── Pythonista >iy8
			    │       │   ├── Linking to Files and Other Resources >00q
			    │       │   │   ├── Web / HTTP(S) >00o
			    │       │   │   └── Files >00p
			    │       ├── Exporting >ezg
			    │       │   ├── Example : Urtext Documentation Exported in Markdown to a File >m9d
			    │       │   └── Example : Fragment Exported to HTML >baq
			    │       ├── File Naming >01m
			    │       ├── History >prp
			    │       ├── project_settings >00l
			    │       │   ├── `title` >egg
			    │       │   ├── `project_title` >xqu
			    │       │   ├── `home` >d6u
			    │       │   ├── `console_log` >1lz
			    │       │   ├── `filenames` >lch
			    │       │   └── `timestamp_format` >00n
			    │       ├── Errors and Warnings >bpk
			    │       ├── Using Multiple Projects >ipy
			    │       │   ├── Project Naming (Identification) >tgp
			    │       │   └── Cross-Project Linking >7lx
			    │       └── User Interface Elements >3n6
			    │           ├── The Node Browser >01i
			    │           └── Traverse Mode >00w
			    │               └── Word Wrap in Traverse Mode >xci
			    └── Example Recursive Node Tree >01n
			ID::01n
			def::>6ct }
    6ct}

ID::lmu