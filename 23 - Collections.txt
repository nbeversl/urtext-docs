Collections

Collections "collect" metadata entries. 

Metadata entries remember their position in their node and so can be used as anchors or "bookmarks". There are no "prescribed" uses for this functionality; metadata entries could be used in any given project as anchors only, metadata only, or in combination.

For instance, metadata could be used to insert 

Collections return links that include the exact character location of each metadata entry. This is 

Another use would be to collect all metadata entries of a given key, and optionally a given value, into a single view. 

[[   ID(>aoq)
     +(*) <- In order to return anything, we must include some nodes in the query. Here we have included all nodes.
     COLLECT(updated=*)
     HEADER(Example Collection : "Last Updated"\n\n)
     FOOTER(flags::exclude_from_toc | exclude_from_export )
     SORT(updated -t -r)
     SHOW(Date Updated: $values\n$title $link\n$contents\n\n)
     FORMAT(indent:2)
 ]]

		{
		Example Collection : "Last Updated"

		Date Updated: `node_date_keyname` >8p4 key in project_settings.
		Tracking Node Dates and Times >cee:306
		Tracking Node Dates and Times
		Reliance on the operating system's "created" or "modified" file date metadata is avoided, since these can be inadvertently overwritten during ordinary file system operations. Instead, new file-level nodes receive a "timestamp" metadata key by default when created:


		Date Updated: `node_date_keyname` >8p4 key in project_settings.
		Tracking Node Dates and Times >cee:306
		Tracking Node Dates and Times
		Reliance on the operating system's "created" or "modified" file date metadata is avoided, since these can be inadvertently overwritten during ordinary file system operations. Instead, new file-level nodes receive a "timestamp" metadata key by default when created:


		flags::exclude_from_toc | exclude_from_export 
		def::>00k; @aoq }



@00k 