Lists



[[ 		
	Dynamic definitions can contain arbitrary text. The only parts read by the compiler are the function names with their parameters in parentheses. Like nodes, you can format/indent/comment these definitions any way you want.

	This definition targets ID m1r, which appears immediately below: | Example: Nodes from the Documentation >m1r.
	ID(>m1r) 

	The asterisk means to include all nodes in the project. 
	INCLUDE(*)

	The LIMIT parameter limits the output to the specified number of results. 
	Note that the default sort order is alphabetical. 
	LIMIT(20)

	FORMAT(indent:3)
	Here the FORMAT parameter is used to indent the output 3 tabs.
	HEADER(Example: Nodes from the Documentation\n flags::exclude_from_export)

	]]

			{
			Example: Nodes from the Documentation
			 flags::exclude_from_export
			Example Child Node Using a Node Pointer >001
			Full Screen / Distraction Free Mode >002
			Sublime Text Interface Tips >003
			Inline Nodes >004
			Timestamps >005
			Requirements and Features >006
			Example Inline Node >00e
			Links and Pointers >00j
			Collections >00k
			project_settings >00l
			Sublime Text tools to help with linking >00m
			`timestamp_format` >00n
			Web / HTTP(S) >00o
			Files >00p
			Linking to Files and Other Resources >00q
			Duplicate Pointers >00t
			Viewing Linked Relationships >00u
			Traverse Mode >00w
			Metadata >00x
			`index` >00z
			ID::m1r; def::>twz; }

	f>./files/example-list-1-definition.png
	f>./files/example-list-1.png

   Note that the at the bottom of the node is the reserved key `def` which refers to the node containing the definition.


id::twz; 