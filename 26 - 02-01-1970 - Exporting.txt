Exporting

Urtext can export to plaintext, Markdown and HTML. Results can be either output to a file or written back into another node within. Like other dynamic functions, exporting is dynamic; when changes are made to the source nodes, exports are immediately updated.

{  Example : Urtext Documentation Exported in Markdown to a File

    The following dynamic definition exports this entire documentation from its root node | Urtext  Version: 0.5-alpha  Usage Guide and References >a5m ) in Markdown format to a file called f>./README.md:

    [[ 
        We include three specific root nodes by ID:
        +(ID=p23) | About This Documentation >p23
        +(ID=013) | About Urtext >013
        +(ID=z7t) | Quick Start, Guides and Examples >z7t
        +(ID=ac5) | Reference >ac5
        

        Here we use `*` for DEPTH, which means unlimited depth. Note that using | Pointers >lmu it is possible to create recursive trees (circular references). In this case, the tree will be drawn only to the first point of recursion. See | Recursive Node Pointers >6ct for more information. 
        DEPTH(*)

        SORT(index)

        For this documentation, we created a user-defined keyname `flags` to identify nodes that are examples/illustrations. We mark them for exclusion from the Table of Contents with they key `exclude_from_toc`. The following parameters accomplishes this:
        -(flags=exclude_from_export)    
        FORMAT( -preformat)
        EXPORT(f>README.md; -markdown)
     ]]

    m9d}

{  Example : Fragment Exported to HTML

    The following Dynamic Definition exports the | Links and Pointers >00j section of the documentation to HTML, into a node inside this one:


baq}




id::ezg