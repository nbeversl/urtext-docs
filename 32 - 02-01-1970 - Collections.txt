Collections

Collections "collect" metadata entries. 

Metadata entries remember their position in their node and so can be used as anchors or "bookmarks". There are no "prescribed" uses for this functionality; metadata entries could be used in any given project as anchors only, metadata only, or in combination.

For instance, metadata could be used to insert 

Collections return links that include the exact character location of each metadata entry. This is 

Another use would be to collect all metadata entries of a given key, and optionally a given value, into a single view. 

[[   ID(>aoq)
     +(*) <- In order to return anything, we must include some nodes in the query. Here we have included all nodes.
     COLLECT(updated=*)
     HEADER(Example Collection : "Last Updated"\n\n)
     FOOTER(flags::exclude_from_toc | exclude_from_export )
     SORT(updated -t -r)
     SHOW(Date Updated: $values\n$title $link\n$contents\n\n)
     FORMAT(indent:2)
 ]]

		{
		Example Collection : "Last Updated"

		Date Updated: Tue., Sep. 29, 2020, 12:40 PM +0000
		Key Bindings and Operations >1vs:114
		See also | Key Bindings and Operations - Definitions >tx6


		Date Updated: Sat., Sep. 26, 2020, 03:48 PM +0000
		Key Bindings and Operations - Definitions >tx6:289
		These nodes contain the key bindings used throughout the documentation and are not linked to the Table of Contents or included for export. The Table of Contents list is | Key Bindings and Operations >1vs


		Date Updated: Sat., Sep. 19, 2020, 01:25 PM
		About Urtext >013:136
		About Urtext


		Date Updated: Sat., Sep. 19, 2020, 01:21 PM
		File Naming >01m:912
		This system preserves automatic numerical sorting within the filesystem, such that the most recent un-indexed nodes appear first. If you want to use another system, such as putting the title first, you can do so.


		Date Updated: Thu., Sep. 10, 2020, 05:32 PM
		Compact Nodes >kpz:804
		f>./files/example-compact-node.png


		Date Updated: Thu., Sep. 10, 2020, 05:24 PM
		Inline Nodes >004:1291
		For all purposes in Urtext, inline nodes' identity is unique from their containing file, parent nodes, and child nodes.


		Date Updated: Thu., Sep. 10, 2020, 05:20 PM
		Nodes >01j:842
		| Node IDs >01q


		flags::exclude_from_toc | exclude_from_export 
		def::>00k; ID::aoq; }



id::00k; 