<!!
node ID >fo2 exists in f>14 - 02-01-1970 - Metadata.txt
node ID >00x exists in f>14 - 02-01-1970 - Metadata.txt
node ID >00z exists in f>14 - 02-01-1970 - Metadata.txt
node ID >hg7 exists in f>14 - 02-01-1970 - Metadata.txt
node ID >pz3 exists in f>14 - 02-01-1970 - Metadata.txt
node ID >5cq exists in f>14 - 02-01-1970 - Metadata.txt
node ID >7w6 exists in f>14 - 02-01-1970 - Metadata.txt
node ID >005 exists in f>14 - 02-01-1970 - Metadata.txt
node ID >8dw exists in f>14 - 02-01-1970 - Metadata.txt
node ID >m58 exists in f>14 - 02-01-1970 - Metadata.txt
node ID >l36 exists in f>14 - 02-01-1970 - Metadata.txt
!!>
Metadata

{ General Syntax

  Every node can have an unlimited number of metadata entries. Metadata is structured in double-colon-separated key/value pairs, with the value (to the right of the colon) containing an optional timestamp. Examples:

        purpose::This node describes Metadata in Urtext <Thu., Jun. 11, 2020, 09:09 PM>
        audience::Urtext user 

  Metadata gets indexed and becomes searchable and sortable from anywhere within the project. Metadata entries also "remember" their location, allowing them to serve as contextual markers or "bookmarks". 

  Other than a few reserved key/value pairs, metadata is user-defined. Keys must be single words, though characters such as dash and underscore are allowed. Values may include spaces. Terminate metadata entries using either a new line or a semicolon. Using the semicolon option, several entries may be strung together on a single line:

      one_key::some value; another_key::some_other_value <Thu., Sep. 10, 2020, 05:37 PM>;
      
  Note that a timestamp anywhere in the value will be indexed as the timestamp for the whole metadata entry. If more than on timestamp appears in an entry, only the first one is indexed. 8dw}
  
{ Timestamps                                                                                  

  {   Syntax and Format

      Text between two angled brackets (<  >) is parsed as a timestamp whenever the first character inside the brackets is not `!`, `-` or whitespace. To insert the current date and time anywhere, press Control-Shift-t: <Thu., Sep. 10, 2020, 05:41 PM>

      Timestamps are read and written utilizing Python's `strftime` directives. The following formats are included by default:

          %%-PYTHON # (<- for info about this marker see | Embedded Syntaxes and Pass Markers >oy5 )

          # Sat., Sep. 12, 2020, 09:35 AM
          '%a., %b. %d, %Y, %I:%M %p' 
          
          # September 12, 2020
          '%B %-d, %Y' 

          # September 2020
          '%B %Y'

          # 09-12-2020
          '%m-%d-%Y'
          
          # Sat., Sep. 12, 2020, 09:35 AM '
          '%a., %b. %d, %Y, %I:%M %p %z' 

          # Sat., Sep. 12, 2020, 09:35 AM'
          '%a., %b. %d, %Y, %I:%M %p'

          # Saturday, September 12, 2020, 09:35 AM'
          '%A, %B %d, %Y, %I:%M %p'

          # 'September 12, 2020, 09:35 AM'
          '%B %d, %Y, %I:%M %p'

          # 'September 12, 2020, 09:35AM'
          '%B %d, %Y, %I:%M%p'

          # 2020
          '%Y'

          # September 12, 2020'
          '%B %d, %Y'

          # Saturday, September 12, 2020, 09:35AM
          '%A, %B %d, %Y, %I:%M%p'

      %%-END-PYTHON 

      Additional formats can be added in the | project_settings >00l node.  hg7}

      Node timestamps are part of metadata (see | Metadata >00x). 
      Urtext also utilizes a "loose" parsing of inline timestamps, meaning they can be placed anywhere and will be recognized and parsed.

  {   Tracking Node Dates and Times 

      Reliance on the operating system's "created" or "modified" date metadata is avoided, since these values can be inadvertently overwritten during ordinary file system operations. Instead, new nodes receive by default a "timestamp" metadata key when created: timestamp::<Thu., Sep. 10, 2020, 05:42 PM>. This behavior can be changed in | project_settings >00l.  

      m58}
    
  { 	Time Zones  

  	Time zones are not required. If no time zone is present, Coordinated Universal Time (UTC) is added by default  for parsing and comparison purposes. To modify this default, set the `timezone` key in | project_settings >00l to another valid value.  7w6}

  005}

{  Case-sensitivity

      -   Values are not case-sensitive, except those with the following keys:

          `title`             Manually overrides the node's title. 

          The rest are used only in the project_settings node (see | project_settings >00l) :

          `timestamp_format`  
          `filenames`         
          `project_title`
          `timezone`
          `timestamp_format`
  l36}

 { Reserved Keys

      There are two reserved keys that Urtext interprets in a special way:

      {   `index`
    
         Provides a way to give nodes a sort order in | The Node Browser >01i.  Indexed nodes will sort before (above) the others, lowest numbers appearing first. To utilize, add a two-digit sort index (00-99) to a node, such as:  index::03    
         You can give the same index number to multiple nodes; in this case they sort first by index, then by timestamp, newest first.

         Unindexed nodes will display underneath indexed nodes, by timestamp, newest first. 00z}

      { `title`

          Provides a way to override the node title, which is by default the full first non-whitespace line. pz3}

      {  `def`
          5cq}
     
  fo2}

ID::00x
