Dynamic Nodes

Dynamic nodes contain content built from the contents of other nodes. Dynamic content stays up to date with its source content at all times. 


Ctrl-Shift-] creates a new dynamic definition in Sublime.

In Pythonista or other editors, create them manually.


In Sublime this will be auto-populated using the shortcut above; however you can also replace it with the ID of another node. For example, if you want the contents to replace an existing node, assign this key the value of that node's ID. If you want it to populate new inline node, create that node and then copy/paste its ID. 



Dynamic are the same as any other node, except that their content is generated automatically from a Dynamic Definition. Dynamic Definitions are surrounded with double square brackets [[ ]], with complete parameters and syntax listed here : | Dynamic Definitions >87g. This section illustrates more generally the use and purpose of dynamic nodes, with examples.

Dynamic Definitions can be written anywhere; it is not necessary to store the definition in the same file to which it refers. (Note that they cannot, however, be stored in the node they target, since they would overwrite themselves.)

There are two main kinds of dynamic output: lists and collections: "Lists" are exactly that: lists of nodes, with each node displayed not more than once once. Lists can optionally expand into trees, showing the hierarchy of nested relationships from each root node in the list. Collections, on the other hand, show metadata entries with their context; the same node may appear many times in a colelction if it contains many metadata entries matching the queried parameters.

	| Lists >>twz
	| Collections >>00k

id::k8p; 