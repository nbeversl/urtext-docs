Lists

[[ 		
	Dynamic definitions can contain arbitrary text. The only parts read by the compiler are the function names with their parameters in parentheses. Like nodes, you can format/indent/comment these definitions any way you want.

	This definition targets ID m1r, which appears immediately below: | Example: Nodes from the Documentation >m1r.
	ID(>m1r) 

	The asterisk means to include all nodes in the project. 
	INCLUDE(*)

	The LIMIT parameter limits the output to the specified number of results. 
	Note that the default sort order is alphabetical. 
	LIMIT(20)

	Here the FORMAT parameter is used to indent the output 3 tabs.
	FORMAT(indent:3) 
	HEADER(Example: Nodes from the Documentation )
	]]

			{
			Example: Nodes from the Documentation
			"Table of Contents" Dynamic Definition >v7r
			About Compact Nodes >ucj
			About Urtext >013
			Basic Syntax >znj
			Case-sensitivity >l36
			Collections >00k
			Compact Nodes >j6t
			Compact Nodes >kpz
			Comparison To Other Tools >h8z
			Dependencies and Installation >2fn
			Description >yv2
			Details on the Sublime Implementation >01u
			Disable Prompts for File Reload >023
			Documentation >ooe
			Download Dependencies from a Monorepo >arl
			Download and Install Dependencies Manually >774
			Duplicate Node IDs >bzv
			Duplicate Pointers >00t
			Dynamic Definitions : Syntax and Parameters >87g
			Dynamic Nodes >k8p
			ID::m1r
			def::>twz }

   Note that the at the bottom of the node is the reserved key `def` which refers to the node containing the definition.


id::twz; 